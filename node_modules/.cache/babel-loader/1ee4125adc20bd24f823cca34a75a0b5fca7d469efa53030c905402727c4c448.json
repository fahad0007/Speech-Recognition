{"ast":null,"code":"var _jsxFileName = \"E:\\\\Voice Recognition\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const startListening = () => SpeechRecognition.startListening({\n    continuous: true,\n    la\n  });\n  const {\n    transcript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  // const Dictaphone = () => {\n  //   const {\n  //     transcript,\n  //     listening,\n  //     resetTranscript,\n  //     browserSupportsSpeechRecognition\n  //   } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Speach To Text Converter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A React Hook that converts speach from the microphone to text and makes it available to your Components\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-style\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startListening,\n          children: \"Start Listening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: SpeechRecognition.stopListening,\n          children: \"Stop Listening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HIOsR6Ydovy/i3vOlFRHflRzTwU=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","App","_s","startListening","continuous","la","transcript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","stopListening","_c","$RefreshReg$"],"sources":["E:/Voice Recognition/src/App.js"],"sourcesContent":["import React from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\nimport \"./App.css\"\n\nconst App = () => {\n  const startListening = ()=> SpeechRecognition.startListening({ continuous: true, la });\n  \n\n  const { transcript, browserSupportsSpeechRecognition } = useSpeechRecognition()\n  // const Dictaphone = () => {\n  //   const {\n  //     transcript,\n  //     listening,\n  //     resetTranscript,\n  //     browserSupportsSpeechRecognition\n  //   } = useSpeechRecognition();\n  \n    if (!browserSupportsSpeechRecognition) {\n      return <span>Browser doesn't support speech recognition.</span>;\n    }\n  return (\n    <div className='app'>\n      <div className=\"container\">\n        <h2>Speach To Text Converter</h2>\n        {/* <br /> */}\n        <p>A React Hook that converts speach from the microphone to text and makes it available to your Components</p>\n\n        <div className=\"main-content\">\n{transcript}\n        </div>\n        <div className=\"btn-style\">\n          <button>Copy</button>\n          <button onClick={startListening}>Start Listening</button>\n          <button onClick={SpeechRecognition.stopListening} >Stop Listening</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,cAAc,GAAGA,CAAA,KAAKN,iBAAiB,CAACM,cAAc,CAAC;IAAEC,UAAU,EAAE,IAAI;IAAEC;EAAG,CAAC,CAAC;EAGtF,MAAM;IAAEC,UAAU;IAAEC;EAAiC,CAAC,GAAGT,oBAAoB,CAAC,CAAC;EAC/E;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,IAAI,CAACS,gCAAgC,EAAE;IACrC,oBAAOP,OAAA;MAAAQ,QAAA,EAAM;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACjE;EACF,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAL,QAAA,eAClBR,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACxBR,OAAA;QAAAQ,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjCZ,OAAA;QAAAQ,QAAA,EAAG;MAAuG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE9GZ,OAAA;QAAKa,SAAS,EAAC,cAAc;QAAAL,QAAA,EACpCF;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNZ,OAAA;QAAKa,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBR,OAAA;UAAAQ,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrBZ,OAAA;UAAQc,OAAO,EAAEX,cAAe;UAAAK,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzDZ,OAAA;UAAQc,OAAO,EAAEjB,iBAAiB,CAACkB,aAAc;UAAAP,QAAA,EAAE;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAV,EAAA,CAlCKD,GAAG;EAAA,QAIkDH,oBAAoB;AAAA;AAAAkB,EAAA,GAJzEf,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}